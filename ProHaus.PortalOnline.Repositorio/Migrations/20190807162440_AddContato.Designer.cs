// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProHaus.PortalOnline.Repositorio.Contexto;

namespace ProHaus.PortalOnline.Repositorio.Migrations
{
    [DbContext(typeof(ProHausContexto))]
    [Migration("20190807162440_AddContato")]
    partial class AddContato
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Acesso.AcessoPagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataUltModif");

                    b.Property<string>("Funcao")
                        .HasMaxLength(100);

                    b.Property<string>("NomePagina")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("PerfilAcessoId");

                    b.Property<string>("SubPagina")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("PerfilAcessoId");

                    b.ToTable("AcessoPaginas");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Acesso.PerfilAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataUltModif");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PerfilAcessos");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Acesso.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Complemento")
                        .HasMaxLength(150);

                    b.Property<DateTime>("DataUltModif");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("Numero");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Acesso.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataUltModif");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .HasMaxLength(100);

                    b.Property<int>("PerfilAcessoId");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(150);

                    b.Property<int>("UnidadeId");

                    b.HasKey("Id");

                    b.HasIndex("PerfilAcessoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("DataUltModif");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Skype")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Custo");

                    b.Property<DateTime>("DataUltModif");

                    b.Property<int>("FornecedorId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("ParNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("TipoProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("TipoProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.TipoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataUltModif");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("TipoProdutos");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Acesso.AcessoPagina", b =>
                {
                    b.HasOne("ProHaus.PortalOnline.Dominio.Entidades.Acesso.PerfilAcesso", "PerfilAcesso")
                        .WithMany("AcessoPagina")
                        .HasForeignKey("PerfilAcessoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Acesso.Usuario", b =>
                {
                    b.HasOne("ProHaus.PortalOnline.Dominio.Entidades.Acesso.PerfilAcesso", "PerfilAcesso")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilAcessoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProHaus.PortalOnline.Dominio.Entidades.Acesso.Unidade", "Unidade")
                        .WithMany("Usuarios")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.Fornecedor", b =>
                {
                    b.HasOne("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.Fornecedor")
                        .WithMany("Fornecedores")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.Produto", b =>
                {
                    b.HasOne("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProHaus.PortalOnline.Dominio.Entidades.Cadastros.TipoProduto", "TipoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
